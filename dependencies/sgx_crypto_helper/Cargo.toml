[package]
name = "sgx_crypto_helper"
version = "1.1.1"
authors = ["The Teaclave Authors"]
repository = "https://github.com/apache/teaclave-sgx-sdk"
license-file = "LICENSE"
documentation = "https://dingelish.github.io/"
description = "Rust SGX SDK provides the ability to write Intel SGX applications in Rust Programming Language."
edition = "2018"

[lib]
name = "sgx_crypto_helper"
crate-type = ["staticlib","rlib"]

[features]
default = ["ucrypto_help"]
ucrypto_help = [
    "sgx_ucrypto",
    "libc",
    "serde",
    "serde_derive",
    "serde-big-array"]
mesalock_sgx = [
    "sgx_tcrypto",
    "sgx_tstd",
    "serde-sgx",
    "serde_derive-sgx",
    "serde-big-array-sgx"]

[dependencies]
sgx_ucrypto = { rev = "v1.1.1", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
libc = { version = "0.2", optional = true }
itertools = { version = "*", default-features = false }
serde = { version = "1.0.104", optional = true }
serde_derive = { version = "1.0.104", optional = true }
serde-big-array = { version = "0.1", optional = true }
serde-sgx = { git = "https://github.com/mesalock-linux/serde-sgx", package = 'serde', optional = true }
serde_derive-sgx = { git = "https://github.com/mesalock-linux/serde-sgx", package = 'serde_derive', optional = true }
serde-big-array-sgx = { git = "https://github.com/mesalock-linux/serde-big-array-sgx", package = 'serde-big-array', optional = true }

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_tcrypto = { rev = "v1.1.1", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_tstd    = { rev = "v1.1.1", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_types   = { rev = "v1.1.1", git = "https://github.com/apache/teaclave-sgx-sdk.git" }

[dev-dependencies]
sgx_ucrypto = { rev = "v1.1.1", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
rdrand = "0.6"
rand_core = "0.4"
serde_json = "*"

#[patch.'https://github.com/apache/teaclave-sgx-sdk.git']
#sgx_align_struct_attribute = { path = "../sgx_align_struct_attribute" }
#sgx_alloc = { path = "../sgx_alloc" }
#sgx_backtrace = { path = "../sgx_backtrace" }
#sgx_backtrace_sys = { path = "../sgx_backtrace_sys" }
#sgx_build_helper = { path = "../sgx_build_helper" }
#sgx_cov = { path = "../sgx_cov" }
#sgx_crypto_helper = { path = "../sgx_crypto_helper" }
#sgx_demangle = { path = "../sgx_demangle" }
#sgx_libc = { path = "../sgx_libc" }
#sgx_no_tstd = { path = "../sgx_no_tstd" }
#sgx_rand = { path = "../sgx_rand" }
#sgx_rand_derive = { path = "../sgx_rand_derive" }
#sgx_serialize = { path = "../sgx_serialize" }
#sgx_serialize_derive = { path = "../sgx_serialize_derive" }
#sgx_serialize_derive_internals = { path = "../sgx_serialize_derive_internals" }
#sgx_tcrypto = { path = "../sgx_tcrypto" }
#sgx_tcrypto_helper = { path = "../sgx_tcrypto_helper" }
#sgx_tdh = { path = "../sgx_tdh" }
#sgx_tkey_exchange = { path = "../sgx_tkey_exchange" }
#sgx_tprotected_fs = { path = "../sgx_tprotected_fs" }
#sgx_trts = { path = "../sgx_trts" }
#sgx_tse = { path = "../sgx_tse" }
#sgx_tseal = { path = "../sgx_tseal" }
#sgx_tstd = { path = "../sgx_tstd" }
#sgx_tunittest = { path = "../sgx_tunittest" }
#sgx_types = { path = "../sgx_types" }
#sgx_ucrypto = { path = "../sgx_ucrypto" }
#sgx_unwind = { path = "../sgx_unwind" }
#sgx_urts = { path = "../sgx_urts" }
